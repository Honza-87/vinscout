import React, { createContext, useContext, useState } from 'react';

type Language = 'cs' | 'en';

interface LanguageContextType {
  language: Language;
  toggleLanguage: () => void;
  t: (key: string) => string;
}

const translations = {
  en: {
    title: "VIN Scout by PETRISK",
    subtitle: "Upload documents and extract vehicle data with AI technology",
    documentProcessing: "Document Processing",
    adminPanel: "Admin Panel",
    insuranceDetails: "Insurance Details",
    clientInformation: "Client Information",
    policyholderInfo: "Policyholder Information",
    policyholderIco: "Policyholder TIN",
    enterPolicyholderIco: "Enter Policyholder TIN",
    email: "Email",
    enterEmail: "Enter Email",
    phone: "Phone",
    enterPhone: "Enter Phone",
    startOfInsurance: "Start of Insurance",
    insuranceCoverage: "Insurance Coverage",
    mandatoryInsurance: "Mandatory Insurance",
    accidentInsurance: "Accident Insurance",
    injuryInsurance: "Injury Insurance",
    windowsInsurance: "Windows Insurance",
    animalCollisions: "Animal Collisions",
    luggage: "Luggage",
    assistanceServices: "Assistance Services",
    vandalism: "Vandalism",
    participation: "Participation",
    mandatoryInsuranceLimit: "Mandatory Insurance Limit",
    accidentInsuranceParticipation: "Accident Insurance Participation",
    fixedAmount: "Fixed Amount",
    percentageAmount: "Percentage Amount",
    windowsInsuranceLimit: "Windows Insurance Limit (million CZK)",
    limit50mil: "50 million CZK",
    limit70mil: "70 million CZK",
    limit100mil: "100 million CZK",
    limit250mil: "250 million CZK",
    max: "Max",
    min: "Min",
    documentUpload: "Document Upload",
    uploadFiles: "Upload Files",
    dragAndDrop: "Drag and drop files here or click to browse",
    supportedFormats: "Supported formats: PDF, DOC, DOCX, XLS, XLSX (max 10MB)",
    extractVINs: "Extract VINs",
    extractedVINs: "Extracted VINs",
    manualEntry: "Manual Entry",
    enterVinOrPlate: "Enter VIN or License Plate",
    addVehicle: "Add Vehicle",
    decode: "Decode Vehicle Data",
    vehicleResults: "Vehicle Results",
    noVehicles: "No vehicles added yet. Upload documents or add vehicles manually.",
    vin: "VIN",
    licensePlate: "License Plate",
    mileage: "Mileage",
    vehicleValue: "Vehicle Value",
    ownerOperatorInfo: "Owner & Operator Information",
    ownerSameAsPolicyholder: "Owner same as policyholder",
    operatorSameAsPolicyholder: "Operator same as policyholder",
    enterOwnerIco: "Enter Owner TIN",
    enterOperatorIco: "Enter Operator TIN",
    changeIndividualCoverage: "Individual insurance coverage adaptation",
    keepSameCoverage: "Keep insurance coverage same as the rest of the fleet",
    individualInsuranceCoverageAdaptation: "Individual insurance coverage adaptation",
    vehicleData: "Vehicle Data",
    type: "Type",
    manufacturer: "Manufacturer",
    model: "Model",
    year: "Year",
    engine: "Engine",
    power: "Power",
    maxWeight: "Max Weight",
    fuelType: "Fuel Type",
    seats: "Seats",
    exportJson: "Export JSON",
    downloadForm: "Download Form",
    vinPlaceholder: "Enter 17-character VIN",
    platePlaceholder: "Enter license plate",
    enterMileage: "Enter mileage",
    enterVehicleValue: "Enter vehicle value",
    decoding: "Decoding",
    systemSettings: "System Settings",
    ocrConfidenceThreshold: "OCR Confidence Threshold",
    ocrConfidenceDesc: "Minimum confidence level for OCR text extraction (0-10)",
    maxFileSize: "Maximum File Size (MB)",
    maxFileSizeDesc: "Maximum allowed file size for uploads",
    tesseractDataPath: "Tesseract Data Path",
    tesseractDataDesc: "Path to Tesseract language data files",
    saveSettings: "Save Settings",
    systemLogs: "System Logs",
    downloadLogs: "Download Logs",
    downloadLogsSuccess: "Logs downloaded successfully",
    viewDetails: "View Details",
    INFO: "INFO",
    WARN: "WARN",
    SUCCESS: "SUCCESS",
    ERROR: "ERROR",
    unextractedFiles: "Unextracted Files",
    unextractedFilesDesc: "You have files that haven't been processed yet. What would you like to do?",
    extract: "Extract & Decode",
    documentUploadAndExtraction: "Document Upload & Extraction",
    uploadedFiles: "Uploaded Files",
    extracting: "Extracting...",
    extractionResults: "Extraction Results",
    vinsFound: "VINs found",
    noVinsFound: "No VINs found",
    processing: "processing",
    dropFiles: "Drag and drop files here or click to browse",
    manualVehicleAddition: "Manual Vehicle Addition",
    manualEntries: "Manual Entries"
  },
  cs: {
    title: "VIN Scout od PETRISK",
    subtitle: "Nahrajte dokumenty a extrahujte data vozidel pomocí AI technologie",
    documentProcessing: "Zpracování dokumentů",
    adminPanel: "Administrační panel",
    insuranceDetails: "Detaily pojištění",
    clientInformation: "Informace o klientovi",
    policyholderInfo: "Informace o pojistníkovi",
    policyholderIco: "IČO pojistníka",
    enterPolicyholderIco: "Zadejte IČO pojistníka",
    email: "E-mail",
    enterEmail: "Zadejte e-mail",
    phone: "Telefon",
    enterPhone: "Zadejte telefon",
    startOfInsurance: "Začátek pojištění",
    insuranceCoverage: "Pojistné krytí",
    mandatoryInsurance: "Povinné ručení",
    accidentInsurance: "Havarijní pojištění",
    injuryInsurance: "Úrazové pojištění",
    windowsInsurance: "Pojištění skel",
    animalCollisions: "Srážka se zvěří",
    luggage: "Zavazadla",
    assistanceServices: "Asistenční služby",
    vandalism: "Vandalismus",
    participation: "Spoluúčast",
    mandatoryInsuranceLimit: "Limit povinného ručení",
    accidentInsuranceParticipation: "Spoluúčast havarijního pojištění",
    fixedAmount: "Pevná částka",
    percentageAmount: "Procentní částka",
    windowsInsuranceLimit: "Limit pojištění skel (mil. Kč)",
    limit50mil: "50 milionů Kč",
    limit70mil: "70 milionů Kč",
    limit100mil: "100 milionů Kč",
    limit250mil: "250 milionů Kč",
    max: "Max",
    min: "Min",
    documentUpload: "Nahrání dokumentů",
    uploadFiles: "Nahrát soubory",
    dragAndDrop: "Přetáhněte soubory sem nebo klikněte pro procházení",
    supportedFormats: "Podporované formáty: PDF, DOC, DOCX, XLS, XLSX (max 10MB)",
    extractVINs: "Extrahovat VIN",
    extractedVINs: "Extrahované VIN",
    manualEntry: "Ruční zadání",
    enterVinOrPlate: "Zadejte VIN nebo SPZ",
    addVehicle: "Přidat vozidlo",
    decode: "Dekódovat data vozidel",
    vehicleResults: "Výsledky vozidel",
    noVehicles: "Zatím nebyla přidána žádná vozidla. Nahrajte dokumenty nebo přidejte vozidla ručně.",
    vin: "VIN",
    licensePlate: "SPZ",
    mileage: "Najeté km",
    vehicleValue: "Hodnota vozidla",
    ownerOperatorInfo: "Informace o vlastníkovi a provozovateli",
    ownerSameAsPolicyholder: "Vlastník shodný s pojistníkem",
    operatorSameAsPolicyholder: "Provozovatel shodný s pojistníkem",
    enterOwnerIco: "Zadejte IČO vlastníka",
    enterOperatorIco: "Zadejte IČO provozovatele",
    changeIndividualCoverage: "Individuální úprava pojistného krytí",
    keepSameCoverage: "Zachovat pojistné krytí stejné jako u zbytku flotily",
    individualInsuranceCoverageAdaptation: "Individuální úprava pojistného krytí",
    vehicleData: "Data vozidla",
    type: "Typ",
    manufacturer: "Výrobce",
    model: "Model",
    year: "Rok",
    engine: "Motor",
    power: "Výkon",
    maxWeight: "Max. hmotnost",
    fuelType: "Typ paliva",
    seats: "Počet míst",
    exportJson: "Exportovat JSON",
    downloadForm: "Stáhnout formulář",
    vinPlaceholder: "Zadejte 17-místný VIN",
    platePlaceholder: "Zadejte SPZ",
    enterMileage: "Zadejte najeté kilometry",
    enterVehicleValue: "Zadejte hodnotu vozidla",
    decoding: "Dekódování",
    systemSettings: "Nastavení systému",
    ocrConfidenceThreshold: "Práh spolehlivosti OCR",
    ocrConfidenceDesc: "Minimální úroveň spolehlivosti pro extrakci textu OCR (0-10)",
    maxFileSize: "Maximální velikost souboru (MB)",
    maxFileSizeDesc: "Maximální povolená velikost souboru pro nahrání",
    tesseractDataPath: "Cesta k datům Tesseract",
    tesseractDataDesc: "Cesta k jazykovým datovým souborům Tesseract",
    saveSettings: "Uložit nastavení",
    systemLogs: "Systémové logy",
    downloadLogs: "Stáhnout logy",
    downloadLogsSuccess: "Logy byly úspěšně staženy",
    viewDetails: "Zobrazit detaily",
    INFO: "INFO",
    WARN: "VAROVÁNÍ",
    SUCCESS: "ÚSPĚCH",
    ERROR: "CHYBA",
    unextractedFiles: "Nezpracované soubory",
    unextractedFilesDesc: "Máte soubory, které ještě nebyly zpracovány. Co chcete udělat?",
    extract: "Extrahovat a dekódovat",
    documentUploadAndExtraction: "Nahrání a extrakce dokumentů",
    uploadedFiles: "Nahrané soubory",
    extracting: "Extrahování...",
    extractionResults: "Výsledky extrakce",
    vinsFound: "nalezených VIN",
    noVinsFound: "Nebyly nalezeny žádné VIN",
    processing: "zpracování",
    dropFiles: "Přetáhněte soubory sem nebo klikněte pro procházení",
    manualVehicleAddition: "Ruční přidání vozidla",
    manualEntries: "Ruční záznamy"
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('cs'); // Czech as default

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'cs' ? 'en' : 'cs');
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['cs']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, toggleLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
